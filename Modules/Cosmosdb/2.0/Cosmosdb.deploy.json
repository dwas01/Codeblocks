{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseAccountName": {
      "type": "string",
      "metadata": {
        "description": "Required. Cosmosdb Database Account Name"
      }
    },
    "apiType": {
      "type": "string",
      "allowedValues": [
        "Cassandra",
        "Gremlin",
        "MongoDB",
        "SQL",
        "Table"
      ],
      "defaultValue": "SQL",
      "metadata": {
        "description": "Optional. Cosmosdb Database Account API type"
      }
    },
    "tier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Optional. Cosmosdb Database Account tier"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Required. The resource group Name of the existing Virtual Network"
      }
    },
    "vNetResourceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the existing Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the existing subnet"
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource identifier of the Diagnostic Storage Account"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Reguired. Resource identifier of Log Analytics Workspace"
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for, a value of 0 will retain data indefinitely"
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Azure Resource Tags object"
      }
    }
  },
  "variables": {
    "cosmosdbAccountName": "[toLower(parameters('databaseAccountName'))]",
    "cosmosdbResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts',variables('cosmosdbAccountName'))]",
    "cosmosdbApiVersion": "[providers('Microsoft.DocumentDB','databaseAccounts').apiVersions[0]]",
    "diagnosticSettingName": "[concat(variables('cosmosdbAccountName'),'/','Microsoft.Insights/service')]",
    "diagnosticStorageAccountId": "[parameters('diagnosticStorageAccountId')]",
    "diagnosticWorkspaceId": "[parameters('logAnalyticsWorkspaceId')]",
    "vNetResourceGroup": "[parameters('vNetResourceGroup')]",
    "vnetResourceName": "[parameters('vNetResourceName')]",
    "subnetName": "[parameters('subnetName')]",
    "pidName": "[concat('pid-', parameters('cuaId'))]"
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "name": "[variables('pidName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "[variables('cosmosdbApiVersion')]",
      "name": "[variables('cosmosdbAccountName')]",
      "kind": "[if(equals(parameters('apiType'), 'MongoDB'), 'MongoDB', 'GlobalDocumentDB')]",
      "location": "[parameters('location')]",
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "properties": {
        "databaseAccountOfferType": "[parameters('tier')]",
        "locations": [
          {
            "locationName": "[parameters('location')]"
          }
        ],
        "capabilities": []
      },
      "resources": [
        {
          "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticsettings",
          "apiVersion": "2016-09-01",
          "name": "[variables('diagnosticSettingName')]",
          "dependsOn": [
            "[variables('cosmosdbResourceId')]"
          ],
          "properties": {
            "storageAccountId": "[variables('diagnosticStorageAccountId')]",
            "workspaceId": "[variables('diagnosticWorkspaceId')]",
            "logs": [
              {
                "category": "DataPlaneRequests",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('LogsRetentionInDays')]"
                }
              },
              {
                "category": "QueryRuntimeStatistics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('LogsRetentionInDays')]"
                }
              },
              {
                "category": "PartitionKeyStatistics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('LogsRetentionInDays')]"
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "days": "[parameters('logsRetentionInDays')]",
                  "enabled": true
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "cosmosdbAccountName": {
      "type": "string",
      "value": "[variables('cosmosdbAccountName')]",
      "metadata": {
        "description": "The Name of the Cosmosdb Database Account"
      }
    },
    "cosmosdbResourceId": {
      "type": "string",
      "value": "[variables('cosmosdbResourceId')]",
      "metadata": {
        "description": "The Resource Id of the Cosmosdb Database Account"
      }
    },
    "cosmosdbResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the Cosmosdb Database Account"
      }
    },
    "cosmosdbEndpoint": {
      "type": "string",
      "value": "[reference(variables('cosmosdbResourceId'), variables('cosmosdbApiVersion')).documentEndpoint]",
      "metadata": {
        "description": "The Endpoint for the Cosmosdb Database Account"
      }
    },
    "cosmosdbAccountKey": {
      "type": "string",
      "value": "[listKeys(variables('cosmosdbResourceId'), variables('cosmosdbApiVersion')).primaryMasterKey]",
      "metadata": {
        "description": "The Primary Master Key for the Cosmosdb Database Account"
      }
    },
    "cosmosdbConnectionString": {
      "type": "string",
      "value": "[concat('AccountEndpoint=https://', variables('cosmosdbAccountName'), '.documents.azure.com:443/;AccountKey=', listKeys(variables('cosmosdbResourceId'), variables('cosmosdbApiVersion')).primaryMasterKey, ';')]",
      "metadata": {
        "description": "The Connection String for the Cosmosdb Database Account"
      }
    },
    "cosmosdbTableApiConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cosmosdbAccountName'), ';AccountKey=', listKeys(variables('cosmosdbResourceId'), variables('cosmosdbApiVersion')).primaryMasterKey, ';TableEndpoint=https://', variables('cosmosdbAccountName'), '.table.cosmosdb.azure.com:443/;')]",
      "metadata": {
        "description": "The Table APi Connection String for the Cosmosdb Database Account"
      }
    },
    "cosmosdbvNetResourceGroup": {
      "type": "string",
      "value": "[variables('vNetResourceGroup')]",
      "metadata": {
        "description": "The Virtual Network Resource group for the Cosmosdb Database Account"
      }
    },
    "cosmosdbvNetResourceName": {
      "type": "string",
      "value": "[variables('vnetResourceName')]",
      "metadata": {
        "description": "The Virtual Network Resource Name for the Cosmosdb Database Account"
      }
    },
    "cosmosdbSubnetName": {
      "type": "string",
      "value": "[variables('subnetName')]",
      "metadata": {
        "description": "The Virtual Network Subnet for the Cosmosdb Database Account"
      }
    }
  }
}