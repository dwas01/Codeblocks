{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "redisCacheName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure Cache for Redis"
      }
    },
    "redisCachesku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Premium",
      "metadata": {
        "description": "Optional. The type of Redis cache to deploy"
      }
    },
    "redisCacheFamily": {
      "type": "string",
      "allowedValues": [
        "C",
        "P"
      ],
      "defaultValue": "P",
      "metadata": {
        "description": "Optional. The sku family to use. Valid values: (C = Basic/Standard, P = Premium)"
      }
    },
    "redisCacheCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "Optional. The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
      }
    },
    "enableNonSSLPort": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. A boolean value that indicates whether to allow access via non-SSL ports"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Required. The resource group Name of the existing Virtual Network"
      }
    },
    "vNetResourceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the existing Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the existing subnet"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources"
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource identifier of the Diagnostic Storage Account"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Reguired. Resource identifier of Log Analytics Workspace"
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for, a value of 0 will retain data indefinitely"
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Azure Resource Tags object"
      }
    }
  },
  "variables": {
    "redisCacheName": "[parameters('redisCacheName')]",
    "redisCacheResourceId": "[resourceId('Microsoft.Cache/Redis',variables('redisCacheName'))]",
    "redisCacheApiVersion": "[providers('Microsoft.Cache','Redis').apiVersions[0]]",
    "diagnosticSettingName": "[concat(variables('redisCacheName'),'/','Microsoft.Insights/service')]",
    "diagnosticStorageAccountId": "[parameters('diagnosticStorageAccountId')]",
    "diagnosticWorkspaceId": "[parameters('logAnalyticsWorkspaceId')]",
    "virtualNetworkSubnetId": "[resourceId(parameters('vNetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vNetResourceName'),  parameters('subnetName'))]",
    "pidName": "[concat('pid-', parameters('cuaId'))]"
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "name": "[variables('pidName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "[variables('redisCacheApiVersion')]",
      "name": "[variables('redisCacheName')]",
      "location": "[parameters('location')]",
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "properties": {
        "enableNonSslPort": "[parameters('enableNonSslPort')]",
        "subnetId": "[variables('virtualNetworkSubnetId')]",
        "sku": {
          "capacity": "[parameters('redisCacheCapacity')]",
          "family": "[parameters('redisCacheFamily')]",
          "name": "[parameters('redisCacheSKU')]"
        }
      },
      "resources": [
        {
          "type": "Microsoft.Cache/Redis/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[variables('diagnosticSettingName')]",
          "dependsOn": [
            "[variables('redisCacheResourceId')]"
          ],
          "properties": {
            "storageAccountId": "[variables('diagnosticStorageAccountId')]",
            "workspaceId": "[variables('diagnosticWorkspaceId')]",
            "metrics": [
              {
                "timeGrain": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('logsRetentionInDays')]"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "redisCacheName": {
      "type": "string",
      "value": "[variables('redisCacheName')]",
      "metadata": {
        "description": "The Name of the Redis Cache"
      }
    },
    "redisCacheResourceId": {
      "type": "string",
      "value": "[variables('redisCacheResourceId')]",
      "metadata": {
        "description": "The Resource Id of the Redis Cache"
      }
    },
    "redisCacheResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the Redis Cache"
      }
    },
    "redisCacheKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2018-03-01').primaryKey]",
      "metadata": {
        "description": "The Primary Key of the Redis Cache"
      }
    },
    "redisCacheConnectionString": {
      "type": "string",
      "value": "[concat(variables('redisCacheName'),'.redis.cache.windows.net:6380',',','password=',listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2018-03-01').primaryKey,',','ssl=True',',','abortConnect=False')]",
      "metadata": {
        "description": "The Connection String of the Redis Cache"
      }
    }
  }
}
