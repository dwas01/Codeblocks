{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aksClusterName": {
      "type": "string",
      "metadata": {
        "description": "Required. Kubernetes AKS Cluster Name"
      }
    },
    "servicePrincipalId": {
      "type": "securestring",
      "metadata": {
        "description": "Required. App ID of the Service Principal"
      }
    },
    "servicePrincipalSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The Service Principal Client Secret"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. The location of AKS resource"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Optional. The size of the Virtual Machine"
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Linux"
      ],
      "defaultValue": "Linux",
      "metadata": {
        "description": "Optional. The type of operating system"
      }
    },
    "nodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Optional. The number of agent nodes for the cluster"
      }
    },
    "maxPodCount": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Optional. The maximum number of pods pre node in the cluster"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Required. The resource group Name of the Virtual Network"
      }
    },
    "vNetResourceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Required. Virtual Network subnet used for nodes and/or pods IP assignment"
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "Required. Network plugin used for building Kubernetes network"
      }
    },
    "serviceCIDR": {
      "type": "string",
      "metadata": {
        "description": "Required. A CIDR notation IP range from which to assign service cluster IPs"
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Required. Containers DNS server IP address"
      }
    },
    "dockerBridgeCIDR": {
      "type": "string",
      "metadata": {
        "description": "Required. A CIDR notation IP for Docker bridge"
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. boolean flag to turn on and off of http application routing"
      }
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. boolean flag to enable Kubernetes Role-Based Access Control"
      }
    },
    "rbacServerAppId": {
      "type": "string",
      "metadata": {
        "description": "Required. RBAC Application ID for the Server App Service Principal"
      }
    },
    "rbacServerSecret": {
      "type": "string",
      "metadata": {
        "description": "Required. RBAC Service Principal Secret for the Client App Service Principal"
      }
    },
    "rbacClientAppId": {
      "type": "string",
      "metadata": {
        "description": "Required. RBAC Application ID for the Client App Service Principal"
      }
    },
    "rbacTenantID": {
      "type": "string",
      "metadata": {
        "description": "Required. RBAC Azure AD Tenant where the cluster will reside"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Required. TResource identifier of Log Analytics Workspace"
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Azure Resource Tags object"
      }
    }
  },
  "variables": {
    "aksClusterName": "[parameters('aksClusterName')]",
    "aksClusterResourceId": "[resourceId('Microsoft.ContainerService/managedClusters',variables('aksClusterName'))]",
    "aksClusterApiVersion": "[providers('Microsoft.ContainerService','managedClusters').apiVersions[0]]",
    "aksClustersubnetId": "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vNetResourceName'), parameters('subnetName'))]",
    "aksClusterSPNId": "[parameters('servicePrincipalId')]",
    "diagnosticWorkspaceId": "[parameters('logAnalyticsWorkspaceId')]",
    "pidName": "[concat('pid-', parameters('cuaId'))]"
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-02-01",
      "name": "[variables('pidName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "[variables('aksClusterApiVersion')]",
      "name": "[variables('aksClusterName')]",
      "location": "[parameters('location')]",
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "properties": {
        "dnsPrefix": "[variables('aksClusterName')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "aadProfile": {
          "clientAppID": "[parameters('rbacClientAppID')]",
          "serverAppID": "[parameters('rbacServerAppID')]",
          "tenantID": "[parameters('rbacTenantID')]",
          "serverAppSecret": "[parameters('rbacServerSecret')]"
        },
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": "[parameters('nodeCount')]",
            "vmSize": "[parameters('vmSize')]",
            "storageProfile": "ManagedDisks",
            "maxPods": "[parameters('maxPodCount')]",
            "osType": "[parameters('osType')]",
            "vnetSubnetID": "[variables('aksClustersubnetId')]"
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalId')]",
          "secret": "[parameters('servicePrincipalSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCIDR')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCIDR')]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[variables('diagnosticWorkspaceId')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "aksClusterName": {
      "type": "string",
      "value": "[variables('aksClusterName')]",
      "metadata": {
        "description": "The Name of the Kubernetes Cluster"
      }
    },
    "aksClusterResourceId": {
      "type": "string",
      "value": "[variables('aksClusterResourceId')]",
      "metadata": {
        "description": "The Resource Id of the Kubernetes Cluster"
      }
    },
    "aksClusterResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the Kubernetes Cluster"
      }
    },
    "aksClusterControlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]",
      "metadata": {
        "description": "The Control Plane FQDN of the Kubernetes Cluster"
      }
    },
    "aksClusterSPNId": {
      "type": "string",
      "value": "[variables('aksClusterSPNId')]",
      "metadata": {
        "description": "The Service Principal ID of the Kubernetes Cluster"
      }
    },
    "aksClusterSubnetId": {
      "type": "string",
      "value": "[variables('aksClusterSubnetId')]",
      "metadata": {
        "description": "The Subnet Resource Id of the Kubernetes Cluster"
      }
    }
  }
}
